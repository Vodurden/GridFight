--: TODO :--

Grid:
	-> Requires general unit handling things
		- Movement
			- Movement needs to be done via a time step
				related to unit speed.
			- Consider having the grid only make movement "requests"
			- Need to support movement from both sides
				- Group::advance/retreat ready to support this
		- Collision
	-> Battles and Special effects
		- Done by outside analysis
		- Need to provide functions for
			outside objects to affect the
			state of the board

Unit/Group Tooltips:
	-> Some sort of tooltip display that gives
		information on the unit selected and the 
		group that it's in
	-> TextArea is a base for this, Draws PlainText
	-> Derive into a TextArea that can take positioning
	-> Derive into a TextArea that can take multiple colors
	-> Derive into a TextArea that can take images
		-) [ALL] Use syntax similar to 
			area << Interface::Color::Red << "Hi" <<
			Interface::Color::RGB(255, 255, 255, 255) << 
			"Other Color Text" << Interface::Position::Center << 
			"Centered Text";

Buttons:
	-> Refactor to use the new Utility::Color interface
	-> Consider refactoring the Text-Rect code, smaller functions?

Skirmish:
	-> Needs a Upcoming-Unit interface
	-> Intergration module between the grid and an interface

Start the Battle State
	-> Consider lifting ideas from BlockConflict?
		- Due to AML incorporation direct copy/paste is unlikely to work
		- Likely that value will still be present
	-> GUI class would be useful here too, possible factorization potential
		- MainMenu probably not useful, however components
			from the button callbacks may be. Consider factorizing
			further into a button-callback managing system.
		- Consider alternative GUI system, seperate from MainMenu
		- Potential to re-use ButtonClass
	-> Consider lifting Class definitions from BlockConflict
	-> Module Integration, How much?
		- Consider Total
	-> How dynamic does it need to be?
		- No Hardcoded unit 'attributes' (Stats, Special Effects, Visuals, etc...)

Consider Other States
	-> Credits
		- Some sort of Text-Box GUI would be needed
		- Consider simple credits.txt bundled with release?
	-> Options
		- Front end for module files? (i.e Module Editor)
		- GUI system again
		- See: {Factor MainMenu into Menu Class}
	-> Unit/Group Editor
		- Other concerns more important right now
	
State Communication
	-> Not Neccecary right now, may be in future
	-> If neccecary consider similar structure to SFML Events

<-- IMPORTANT -->
Do I need to focus on Interface first or getting gameplay mechanics down?
	-> Considering BlockConflict interface troubles would be a good option
		to tackle the interface first

Group/Unit's are the only main classes --> Composition is overkill
	- If game complexity increases beyond this consider
		composition approaches

Uploads:
	-> Uplod Color_Test config file test_config_file.cfg
